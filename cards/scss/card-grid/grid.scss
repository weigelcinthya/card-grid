$grid-columns: 12;
$gap-horizontal: 20px;
$gap-vertical: $gap-horizontal;


@mixin grid {
  @supports(grid-area: auto) {
    display: grid;
    grid-column-gap: $gap-horizontal;
    grid-row-gap: $gap-vertical;
  }
}

@mixin gridLayout($cols...) {
  @supports(grid-area: auto) {
    grid-template-columns: repeat($grid-columns, 1fr);

    $i: 1;
    @each $col in $cols {
      > :nth-of-type(#{$i}) {
        grid-column-end: span nth($col,1);
        @if length($col) > 1 {
          grid-row-end: span nth($col,2);
        }
      }
      $i: $i + 1;
    }
  }
}

@mixin gridAuto($min-width) {
  @supports(grid-area: auto) {
    grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  }
}


.card-grid { 
  @include grid;
  @include gridAuto(260px);
  margin: 0 auto;
  
  @media only screen and (min-width: 375px) {
    max-width: 280px;
    grid-auto-rows: 280px
  }
  
  @media only screen and (min-width: 940px) {
        grid-auto-rows: 520px 360px 360px;
        max-width: 940px;
        @include gridLayout(
            (12, 1), 
            (3, 1), 
            (3, 1),
            (6, 1),
            (6, 1), 
            (3, 1),
            (3, 1),
        );
    }
}